@use '../abstracts/' as *;

.stack-grid {
  --max-width: #{$container-max-width};
  --padding-inline-min: #{$container-padding-inline-min};
  --padding-inline-max: #{$container-padding-inline-max};
  display: grid;
  grid-template-columns:
    minmax(var(--padding-inline-min), var(--padding-inline-max)) min(
      100% - ($container-padding-inline-min * 2),
      var(--max-width)
    )
    minmax(var(--padding-inline-min), var(--padding-inline-max));
  grid-template-rows: min-content 1fr;

  grid-template-areas:
    '. logo .'
    'picture picture picture'
    '. contents .';

  @include mq(small) {
    --max-width: #{$container-max-width-small};
    grid-template-columns:
      minmax(0, var(--padding-inline-min))
      repeat(2, 1fr) minmax(0, var(--padding-inline-min));
    grid-template-areas:
      '. logo picture picture'
      '. contents picture picture';
  }
  @include mq(medium) {
    --max-width: #{$container-max-width};
    grid-template-columns:
      minmax(var(--padding-inline-min), var(--padding-inline-max))
      repeat(2, 1fr) minmax(var(--padding-inline-min), var(--padding-inline-max));
    grid-template-areas:
      '. logo picture picture'
      '. contents picture picture';
  }

  & > .bg-img {
    display: none;
    @include mq(small) {
      display: block;
      height: 100%;
      grid-column: 1 / span 3;
      grid-row: 1 / -1;
      z-index: -1;
    }
  }

  & > .logo {
    --logo-width: #{$logo-width-min};
    grid-area: logo;
    display: flex;
    justify-content: start;
    align-items: center;
    padding-block: $logo-padding-block;
    @include mq(small) {
      --logo-width: #{$logo-width-max};
    }

    & img {
      width: var(--logo-width);
    }
  }

  & > .main-content {
    --flow-spacer: 1rem;
    grid-area: contents;
    max-width: 45ch;
    padding-block: $main-content-padding-block-min;
    text-align: center;

    @include mq(small) {
      --flow-spacer: 2rem;
      align-self: center;
      justify-self: start;
      margin-inline-end: clamp(
        var(--padding-inline-min),
        var(--padding-inline-min) + 3vw,
        13.75rem
      );
    }
    @include mq(medium) {
      text-align: left;
    }
  }

  & > picture {
    grid-area: picture;
    @include mq(medium) {
      max-width: $hero-image-min-width;
      justify-self: end;
    }

    @include mq(large) {
      max-width: $hero-image-max-width;
      justify-self: auto;
    }

    & > img {
      width: 100%;
      height: 100%;
    }
  }
}
